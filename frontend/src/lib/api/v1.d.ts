/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/answers/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Answer */
        post: operations["create_answer_api_answers__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/answers/{answer_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Answer */
        get: operations["read_answer_api_answers__answer_id__get"];
        /** Update Answer */
        put: operations["update_answer_api_answers__answer_id__put"];
        post?: never;
        /** Delete Answer */
        delete: operations["delete_answer_api_answers__answer_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/applications/{application_id}/deploy": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Deploy Application */
        post: operations["deploy_application_api_applications__application_id__deploy_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/items/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read All Items */
        get: operations["read_all_items_api_items__get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_items__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/items/import_csv": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Import Items Csv */
        post: operations["import_items_csv_api_items_import_csv_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/items/export_csv": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Items Csv */
        get: operations["get_items_csv_api_items_export_csv_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/items/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Item */
        get: operations["read_item_api_items__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_items__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_items__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/items/{item_id}/answers/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Answers By Item */
        get: operations["read_answers_by_item_api_items__item_id__answers__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/logtopics/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Logtopics */
        get: operations["read_logtopics_api_logtopics__get"];
        put?: never;
        /** Create Logtopic */
        post: operations["create_logtopic_api_logtopics__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/pages/{page_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Page */
        get: operations["read_page_api_pages__page_id__get"];
        /** Update Page */
        put: operations["update_page_api_pages__page_id__put"];
        post?: never;
        /** Delete Page */
        delete: operations["delete_page_api_pages__page_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/pages/{page_id}/items/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Items */
        get: operations["read_items_api_pages__page_id__items__get"];
        put?: never;
        /**
         * Add Item To Page
         * @description Adds an item to a page, always at the last available order.
         */
        post: operations["add_item_to_page_api_pages__page_id__items__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/pages/{page_id}/items/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * Remove Item From Page
         * @description Removes an item from a page.
         */
        delete: operations["remove_item_from_page_api_pages__page_id__items__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/pages/{page_id}/items/order": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Reorder Items On Page
         * @description Reorders items within a page.
         */
        put: operations["reorder_items_on_page_api_pages__page_id__items_order_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/participants/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Participant */
        post: operations["create_participant_api_participants__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/participants/{participant_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Participant */
        get: operations["read_participant_api_participants__participant_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/participants/{participant_id}/answers/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Answers By Participant */
        get: operations["read_answers_by_participant_api_participants__participant_id__answers__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/projects/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Projects */
        get: operations["read_projects_api_projects__get"];
        put?: never;
        /** Create Project */
        post: operations["create_project_api_projects__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/projects/{project_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Project */
        get: operations["read_project_api_projects__project_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/projects/{project_id}/application": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Project Application */
        get: operations["read_project_application_api_projects__project_id__application_get"];
        /** Update Project Application */
        put: operations["update_project_application_api_projects__project_id__application_put"];
        /** Create Application */
        post: operations["create_application_api_projects__project_id__application_post"];
        delete?: never;
        options?: never;
        head?: never;
        /** Patch Project Application */
        patch: operations["patch_project_application_api_projects__project_id__application_patch"];
        trace?: never;
    };
    "/api/projects/{project_id}/publications": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Project Publications */
        get: operations["read_project_publications_api_projects__project_id__publications_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/projects/{project_id}/application/containers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Application Containers */
        get: operations["read_application_containers_api_projects__project_id__application_containers_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/projects/{project_id}/application/containers/{container_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Container */
        get: operations["read_container_api_projects__project_id__application_containers__container_id__get"];
        /** Update Container */
        put: operations["update_container_api_projects__project_id__application_containers__container_id__put"];
        post?: never;
        /** Delete Container */
        delete: operations["delete_container_api_projects__project_id__application_containers__container_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/projects/{project_id}/repo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Project Repo */
        get: operations["read_project_repo_api_projects__project_id__repo_get"];
        /** Update Project Repo */
        put: operations["update_project_repo_api_projects__project_id__repo_put"];
        /** Create Project Repo */
        post: operations["create_project_repo_api_projects__project_id__repo_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/projects/{project_id}/application/containers/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Container */
        post: operations["create_container_api_projects__project_id__application_containers__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/projects/{project_id}/survey": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Project Survey */
        get: operations["get_project_survey_api_projects__project_id__survey_get"];
        /** Update Project Survey */
        put: operations["update_project_survey_api_projects__project_id__survey_put"];
        /** Create Project Survey */
        post: operations["create_project_survey_api_projects__project_id__survey_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/publications/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Publications */
        get: operations["read_publications_api_publications__get"];
        put?: never;
        /** Create Publication */
        post: operations["create_publication_api_publications__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/publications/uuid/{link_uuid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Publication By Uuid */
        get: operations["read_publication_by_uuid_api_publications_uuid__link_uuid__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/publications/{publication_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Publication */
        get: operations["read_publication_api_publications__publication_id__get"];
        /** Update Publication */
        put: operations["update_publication_api_publications__publication_id__put"];
        post?: never;
        /** Delete Publication */
        delete: operations["delete_publication_api_publications__publication_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/publications/{publication_id}/deploy/{participant_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Deploy Publication */
        get: operations["deploy_publication_api_publications__publication_id__deploy__participant_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/surveys/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Survey */
        post: operations["create_survey_api_surveys__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/surveys/{survey_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Survey */
        get: operations["read_survey_api_surveys__survey_id__get"];
        /** Update Survey */
        put: operations["update_survey_api_surveys__survey_id__put"];
        post?: never;
        /** Delete Survey */
        delete: operations["delete_survey_api_surveys__survey_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/surveys/{survey_id}/pages/{page_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * Remove Page From Survey
         * @description Removes a page from a survey.
         */
        delete: operations["remove_page_from_survey_api_surveys__survey_id__pages__page_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/surveys/{survey_id}/pages/order": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Reorder Pages On Survey
         * @description Reorders pages within a survey.
         */
        put: operations["reorder_pages_on_survey_api_surveys__survey_id__pages_order_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/surveys/{survey_id}/pages/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Pages */
        get: operations["read_pages_api_surveys__survey_id__pages__get"];
        put?: never;
        /** Create Page */
        post: operations["create_page_api_surveys__survey_id__pages__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/surveys/{survey_id}/answers/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Answers By Survey */
        get: operations["read_answers_by_survey_api_surveys__survey_id__answers__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/surveys/{survey_id}/export": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Export Survey */
        get: operations["export_survey_api_surveys__survey_id__export_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Register */
        post: operations["register_api_auth_register_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/verify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Verify Credentials */
        post: operations["verify_credentials_api_auth_verify_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Answer */
        Answer: {
            /** Participant Id */
            participant_id: number;
            /** Item Id */
            item_id: number;
            /** Page Id */
            page_id: number;
            /** Value */
            value: unknown;
            /** Id */
            id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /** AnswerCreate */
        AnswerCreate: {
            /** Participant Id */
            participant_id: number;
            /** Item Id */
            item_id: number;
            /** Page Id */
            page_id: number;
            /** Value */
            value: unknown;
        };
        /** AnswerUpdate */
        AnswerUpdate: {
            /** Participant Id */
            participant_id: number;
            /** Item Id */
            item_id: number;
            /** Page Id */
            page_id: number;
            /** Value */
            value: unknown;
        };
        /** Application */
        Application: {
            /** Ros Version */
            ros_version: string;
            /** Id */
            id: number;
            /** Project Id */
            project_id: number;
            /** Build Version */
            build_version: number;
        };
        /** ApplicationCreate */
        ApplicationCreate: {
            /** Ros Version */
            ros_version: string;
        };
        /** ApplicationUpdate */
        ApplicationUpdate: {
            /** Ros Version */
            ros_version?: string | null;
            /** Build Version */
            build_version?: number | null;
        };
        /** ApplicationWithStatus */
        ApplicationWithStatus: {
            /** Ros Version */
            ros_version: string;
            /** Id */
            id: number;
            /** Project Id */
            project_id: number;
            /** Build Version */
            build_version: number;
            /** Status */
            status: string;
        };
        /** Body_import_items_csv_api_items_import_csv_post */
        Body_import_items_csv_api_items_import_csv_post: {
            /**
             * File
             * Format: binary
             */
            file: string;
        };
        /** Container */
        Container: {
            /** Name */
            name: string;
            /** Dockerfile */
            dockerfile: string;
            /** Ports */
            ports: components["schemas"]["PortMapping"][] | null;
            /** Id */
            id: number;
            /** Application Id */
            application_id: number;
        };
        /** ContainerFormSchema */
        ContainerFormSchema: {
            /** Id */
            id?: number | null;
            /**
             * Name
             * @description Name is required
             */
            name: string;
            /**
             * Dockerfile
             * @description Dockerfile path is required
             */
            dockerfile: string;
            /**
             * Ports
             * @default []
             */
            ports: components["schemas"]["PortMapping"][];
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** Item */
        Item: {
            /** Title */
            title?: string | null;
            /** Prompt */
            prompt?: string | null;
            item_type: components["schemas"]["ItemType"];
            /** Id */
            id: number;
            question_type?: components["schemas"]["QuestionType"] | null;
            /** Options */
            options?: string[] | null;
            /** Scale Min */
            scale_min?: number | null;
            /** Scale Max */
            scale_max?: number | null;
            /** Statements */
            statements?: string[] | null;
            /** Matrix Options */
            matrix_options?: string[] | null;
            /** Image Url */
            image_url?: string | null;
            /** Video Url */
            video_url?: string | null;
            /** Text Content */
            text_content?: string | null;
        };
        /** ItemCreate */
        ItemCreate: {
            /** Title */
            title?: string | null;
            /** Prompt */
            prompt?: string | null;
            item_type: components["schemas"]["ItemType"];
            question_type?: components["schemas"]["QuestionType"] | null;
            /** Options */
            options?: string[] | null;
            /** Scale Min */
            scale_min?: number | null;
            /** Scale Max */
            scale_max?: number | null;
            /** Statements */
            statements?: string[] | null;
            /** Matrix Options */
            matrix_options?: string[] | null;
            /** Image Url */
            image_url?: string | null;
            /** Video Url */
            video_url?: string | null;
            /** Text Content */
            text_content?: string | null;
        };
        /** ItemResponse */
        ItemResponse: {
            /** Id */
            id: number;
            /** Title */
            title: string | null;
            /** Prompt */
            prompt: string | null;
            /** Item Type */
            item_type: string | null;
            /** Question Type */
            question_type: string | null;
            /** Options */
            options: string[] | null;
            /** Scale Min */
            scale_min: number | null;
            /** Scale Max */
            scale_max: number | null;
            /** Statements */
            statements: string[] | null;
            /** Matrix Options */
            matrix_options: string[] | null;
            /** Image Url */
            image_url: string | null;
            /** Video Url */
            video_url: string | null;
            /** Text Content */
            text_content: string | null;
        };
        /**
         * ItemType
         * @enum {string}
         */
        ItemType: "question" | "image" | "video" | "static_text";
        /** ItemUpdate */
        ItemUpdate: {
            /** Title */
            title?: string | null;
            /** Prompt */
            prompt?: string | null;
            item_type: components["schemas"]["ItemType"];
            question_type?: components["schemas"]["QuestionType"] | null;
            /** Options */
            options?: string[] | null;
            /** Scale Min */
            scale_min?: number | null;
            /** Scale Max */
            scale_max?: number | null;
            /** Statements */
            statements?: string[] | null;
            /** Matrix Options */
            matrix_options?: string[] | null;
            /** Image Url */
            image_url?: string | null;
            /** Video Url */
            video_url?: string | null;
            /** Text Content */
            text_content?: string | null;
        };
        /** LogTopic */
        LogTopic: {
            /** Topic */
            topic: string;
            /** Id */
            id: number;
            /** Application Id */
            application_id: number;
        };
        /** LogTopicCreate */
        LogTopicCreate: {
            /** Topic */
            topic: string;
        };
        /** Page */
        Page: {
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            /** Survey Id */
            survey_id: number;
            /**
             * Back Button Disabled
             * @default false
             */
            back_button_disabled: boolean;
            /**
             * Application Enabled
             * @default false
             */
            application_enabled: boolean;
            /** Id */
            id: number;
            /**
             * Items
             * @default []
             */
            items: components["schemas"]["Item"][];
            /** Order */
            order: number;
        };
        /** PageAddItemRequest */
        PageAddItemRequest: {
            /** Item Id */
            item_id: number;
        };
        /** PageCreate */
        PageCreate: {
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            /** Survey Id */
            survey_id: number;
            /**
             * Back Button Disabled
             * @default false
             */
            back_button_disabled: boolean;
            /**
             * Application Enabled
             * @default false
             */
            application_enabled: boolean;
            /**
             * Items
             * @default []
             */
            items: number[] | null;
        };
        /** PageItemOrderUpdate */
        PageItemOrderUpdate: {
            /** Id */
            id: number;
            /** Order */
            order: number;
        };
        /** PageUpdate */
        PageUpdate: {
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            /** Survey Id */
            survey_id: number;
            /**
             * Back Button Disabled
             * @default false
             */
            back_button_disabled: boolean;
            /**
             * Application Enabled
             * @default false
             */
            application_enabled: boolean;
            /**
             * Items
             * @default []
             */
            items: number[] | null;
        };
        /** Participant */
        Participant: {
            /** External Id */
            external_id?: string | null;
            /** External Survey Id */
            external_survey_id?: string | null;
            /** External Session Id */
            external_session_id?: string | null;
            /** Id */
            id: number;
        };
        /** ParticipantCreate */
        ParticipantCreate: {
            /** External Id */
            external_id?: string | null;
            /** External Survey Id */
            external_survey_id?: string | null;
            /** External Session Id */
            external_session_id?: string | null;
        };
        /** PortMapping */
        PortMapping: {
            /**
             * Internal Port
             * @description Container port must be a positive integer
             */
            internal_port: number;
            /**
             * External Port
             * @description Host port must be a positive integer
             */
            external_port: number;
        };
        /** Project */
        Project: {
            /** Name */
            name: string;
            /** Id */
            id: number;
        };
        /** ProjectCreate */
        ProjectCreate: {
            /** Name */
            name: string;
        };
        /** Publication */
        Publication: {
            /** Name */
            name: string;
            /** Project Id */
            project_id: number;
            /** Application Only */
            application_only: boolean;
            /**
             * Start Date
             * Format: date-time
             */
            start_date: string;
            /** End Date */
            end_date?: string | null;
            /** Collect Data */
            collect_data: boolean;
            /** Redirect Url */
            redirect_url?: string | null;
            /** Allow Anonymous */
            allow_anonymous: boolean;
            /** Id */
            id: number;
            /**
             * Link Uuid
             * Format: uuid
             */
            link_uuid: string;
        };
        /** PublicationCreate */
        PublicationCreate: {
            /** Name */
            name: string;
            /** Project Id */
            project_id: number;
            /** Application Only */
            application_only: boolean;
            /**
             * Start Date
             * Format: date-time
             */
            start_date: string;
            /** End Date */
            end_date?: string | null;
            /** Collect Data */
            collect_data: boolean;
            /** Redirect Url */
            redirect_url?: string | null;
            /** Allow Anonymous */
            allow_anonymous: boolean;
        };
        /** PublicationUpdate */
        PublicationUpdate: {
            /** Name */
            name?: string | null;
            /** Application Only */
            application_only?: boolean | null;
            /** Start Date */
            start_date?: string | null;
            /** End Date */
            end_date?: string | null;
            /** Collect Data */
            collect_data?: boolean | null;
            /** Redirect Url */
            redirect_url?: string | null;
            /** Allow Anonymous */
            allow_anonymous?: boolean | null;
        };
        /**
         * QuestionType
         * @enum {string}
         */
        QuestionType: "free_text" | "multiple_choice_single" | "multiple_choice_multiple" | "scale" | "matrix_scale" | "likert_scale";
        /** Repo */
        Repo: {
            /** Git Url */
            git_url: string;
            /** Git Branch */
            git_branch: string;
            /** Access Token */
            access_token?: string | null;
            /** Id */
            id: number;
            /** Application Id */
            application_id: number;
        };
        /** RepoCreate */
        RepoCreate: {
            /** Git Url */
            git_url: string;
            /** Git Branch */
            git_branch: string;
            /** Access Token */
            access_token?: string | null;
        };
        /** RepoUpdate */
        RepoUpdate: {
            /** Git Url */
            git_url?: string | null;
            /** Git Branch */
            git_branch?: string | null;
            /** Access Token */
            access_token?: string | null;
        };
        /** Survey */
        Survey: {
            /** Title */
            title: string;
            /** Description */
            description?: string | null;
            /** Project Id */
            project_id: number;
            /** Id */
            id: number;
            /**
             * Pages
             * @default []
             */
            pages: components["schemas"]["Page"][];
        };
        /** SurveyBase */
        SurveyBase: {
            /** Title */
            title: string;
            /** Description */
            description?: string | null;
            /** Project Id */
            project_id: number;
        };
        /** SurveyCreate */
        SurveyCreate: {
            /** Title */
            title: string;
            /** Description */
            description?: string | null;
            /** Project Id */
            project_id: number;
        };
        /** SurveyUpdate */
        SurveyUpdate: {
            /** Title */
            title: string;
            /** Description */
            description?: string | null;
            /** Project Id */
            project_id: number;
            /**
             * Pages
             * @default []
             */
            pages: components["schemas"]["PageUpdate"][];
        };
        /** User */
        User: {
            /** Username */
            username: string;
            /** Id */
            id: number;
            /** Is Admin */
            is_admin: boolean;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** UserCreate */
        UserCreate: {
            /** Username */
            username: string;
            /** Password */
            password: string;
        };
        /** UserLogin */
        UserLogin: {
            /** Username */
            username: string;
            /** Password */
            password: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    create_answer_api_answers__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AnswerCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Answer"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_answer_api_answers__answer_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                answer_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Answer"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_answer_api_answers__answer_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                answer_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AnswerUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Answer"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_answer_api_answers__answer_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                answer_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    deploy_application_api_applications__application_id__deploy_post: {
        parameters: {
            query: {
                participant_id: number;
            };
            header?: never;
            path: {
                application_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_all_items_api_items__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Item"][];
                };
            };
        };
    };
    create_item_api_items__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ItemCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Item"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    import_items_csv_api_items_import_csv_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_import_items_csv_api_items_import_csv_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ItemResponse"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_items_csv_api_items_export_csv_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    read_item_api_items__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Item"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_items__item_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ItemUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Item"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_items__item_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_answers_by_item_api_items__item_id__answers__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Answer"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_logtopics_api_logtopics__get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LogTopic"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_logtopic_api_logtopics__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LogTopicCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LogTopic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_page_api_pages__page_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                page_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_page_api_pages__page_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                page_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_page_api_pages__page_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                page_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_items_api_pages__page_id__items__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                page_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Item"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_item_to_page_api_pages__page_id__items__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                page_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageAddItemRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    remove_item_from_page_api_pages__page_id__items__item_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                page_id: number;
                item_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    reorder_items_on_page_api_pages__page_id__items_order_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                page_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageItemOrderUpdate"][];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_participant_api_participants__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ParticipantCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Participant"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_participant_api_participants__participant_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                participant_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Participant"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_answers_by_participant_api_participants__participant_id__answers__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                participant_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Answer"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_projects_api_projects__get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Project"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_project_api_projects__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProjectCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Project"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_project_api_projects__project_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Project"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_project_application_api_projects__project_id__application_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApplicationWithStatus"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_project_application_api_projects__project_id__application_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ApplicationUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Application"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_application_api_projects__project_id__application_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ApplicationCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Application"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    patch_project_application_api_projects__project_id__application_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ApplicationUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Application"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_project_publications_api_projects__project_id__publications_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Publication"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_application_containers_api_projects__project_id__application_containers_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
            };
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Container"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_container_api_projects__project_id__application_containers__container_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
                container_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Container"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_container_api_projects__project_id__application_containers__container_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
                container_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ContainerFormSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Container"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_container_api_projects__project_id__application_containers__container_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
                container_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_project_repo_api_projects__project_id__repo_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Repo"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_project_repo_api_projects__project_id__repo_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RepoUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Repo"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_project_repo_api_projects__project_id__repo_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RepoCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Repo"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_container_api_projects__project_id__application_containers__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ContainerFormSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Container"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_project_survey_api_projects__project_id__survey_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Survey"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_project_survey_api_projects__project_id__survey_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SurveyUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Survey"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_project_survey_api_projects__project_id__survey_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SurveyBase"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Survey"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_publications_api_publications__get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Publication"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_publication_api_publications__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PublicationCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PublicationCreate"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_publication_by_uuid_api_publications_uuid__link_uuid__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                link_uuid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Publication"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_publication_api_publications__publication_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                publication_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Publication"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_publication_api_publications__publication_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                publication_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PublicationUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Publication"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_publication_api_publications__publication_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                publication_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Publication"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    deploy_publication_api_publications__publication_id__deploy__participant_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                publication_id: number;
                participant_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_survey_api_surveys__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SurveyCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Survey"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_survey_api_surveys__survey_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                survey_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Survey"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_survey_api_surveys__survey_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                survey_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SurveyUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Survey"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_survey_api_surveys__survey_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                survey_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    remove_page_from_survey_api_surveys__survey_id__pages__page_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                survey_id: number;
                page_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    reorder_pages_on_survey_api_surveys__survey_id__pages_order_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                survey_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageItemOrderUpdate"][];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_pages_api_surveys__survey_id__pages__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                survey_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_page_api_surveys__survey_id__pages__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                survey_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PageCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_answers_by_survey_api_surveys__survey_id__answers__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                survey_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Answer"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    export_survey_api_surveys__survey_id__export_get: {
        parameters: {
            query: {
                format: string;
                include_answers?: boolean;
            };
            header?: never;
            path: {
                survey_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    register_api_auth_register_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    verify_credentials_api_auth_verify_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserLogin"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
